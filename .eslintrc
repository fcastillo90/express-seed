{
  //   ╔═╗╔═╗╦  ╦╔╗╔╔╦╗┬─┐┌─┐
  //   ║╣ ╚═╗║  ║║║║ ║ ├┬┘│
  //  o╚═╝╚═╝╩═╝╩╝╚╝ ╩ ┴└─└─┘
  // A set of basic code conventions (similar to a .jshintrc file) designed to
  // and encourage quality and consistency across your Sails app's code base.
  // These rules are checked against automatically any time you run `npm test`.
  //
  // > Note: If you're using mocha, you'll want to add an extra override file to your
  // > `test/` folder so that eslint will tolerate mocha-specific globals like `before`
  // > and `describe`.
  //
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // For more information about any of the rules below, check out the relevant
  // reference page on eslint.org.  For example, to get details on "no-sequences",
  // you would visit `http://eslint.org/docs/rules/no-sequences`.
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  "env": {
    "node": true,
    "es6": true,
    "jest/globals": true
  },

  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },

  "globals": {
    // If "no-undef" is enabled below and your app uses globals, be sure to list all
    // relevant globals below (including the globalIds of models, if appropriate):
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    "sails": true,
    "_": true,
    "async": true
    // ...and any other backend globals (e.g. `"Organization": true`)
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  },

  "plugins":[
    "import",
    "jest",
    "prettier"
  ],

  "extends":
  [
    "eslint:recommended",
    "airbnb-base",
    "prettier",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:jest/all"
  ],

  "rules": {
    "prettier/prettier": ["error"],

    // "callback-return":              [2, ["callback", "cb", "next", "done", "proceed"]],
    // "camelcase":                    [1, {"properties": "always"}],
    // "comma-style":                  [2, "last"],
    // "curly":                        [2],
    // "eqeqeq":                       [2, "always"],
    // "eol-last":                     [1],
    // "handle-callback-err":          [2],
    // "indent":                       [1, 2, {"SwitchCase": 1}],
    // "linebreak-style":              [2, "unix"],
    // "no-dupe-keys":                 [2],
    // "no-duplicate-case":            [2],
    // "no-extra-semi":                [1],
    // "no-labels":                    [2],
    // "no-mixed-spaces-and-tabs":     [2, "smart-tabs"],
    // "no-redeclare":                 [1],
    // "no-return-assign":             [2, "always"],
    // "no-sequences":                 [2],
    // "no-trailing-spaces":           [1],
    // "no-undef":                     [2],
    // // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // // ^^Note: If this "no-undef" rule is enabled (set to `[2]`), then all model globals
    // // (e.g. `"Organization": true`) should be included above under "globals".
    // // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // "no-unexpected-multiline":      [1],
    // "no-unused-vars":               [1],
    // "no-use-before-define":         [2, { "functions": false }],
    // "one-var":                      [2, "never"],
    // "prefer-arrow-callback":        [1, { "allowNamedFunctions": true }],
    // "quotes":                       [1, "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
    // "semi":                         [2, "always"],
    // "semi-spacing":                 [1, {"before": false, "after": true}],

    // CUSTOM OVERRIDES
    // TODO: remove no-restricted-syntax override and replace for...Of due
    /// "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
    "no-restricted-syntax":           0,
    "no-console":                     0,
    "no-underscore-dangle":           0,
    "no-plusplus":                    ["error", { "allowForLoopAfterthoughts": true }]
  }

}
